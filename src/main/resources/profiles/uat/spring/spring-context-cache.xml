<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:c="http://www.springframework.org/schema/c"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-3.2.xsd"
	default-lazy-init="true">
	
	<!-- 启用缓存注解功能，这个是必须的，否则注解不会生效，另外，该注解一定要声明在spring主配置文件中才会生效，
		  也可以通过@EnableCaching注解编写类继承CachingConfigurerSupport实现 -->
	<cache:annotation-driven cache-manager="cacheManager"/>
	
	<!-- spring自己的管理器，这里定义了两个缓存位置名称 ，既注解中的value -->
	<bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">
		<property name="caches">
			<set>
				<bean class="com.hubert.core.redis.RedisCache">
					<property name="redisTemplate" ref="redisTemplate" />
					<property name="name" value="${redis.name}"/>
				</bean>
				<!-- <bean class="com.hubert.core.redis.RedisCache">
					<property name="redisTemplate" ref="redisTemplate02" />
					<property name="name" value="commonCache"/>
				</bean> -->
			</set>
		</property>
	</bean>
	
	
	<!-- redis 相关配置 -->
	<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxIdle" value="${redis.maxIdle}" />		
		<property name="maxWaitMillis" value="${redis.maxWait}" />
		<property name="testOnBorrow" value="${redis.testOnBorrow}" />
		<property name="timeBetweenEvictionRunsMillis" value="${redis.pool.timeBetweenEvictionRunsMillis}" />
		<property name="minEvictableIdleTimeMillis" value="${redis.pool.minEvictableIdleTimeMillis}" />
	</bean>
	
	
	<!-- <bean id="connectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
		p:host-name="${redis.host}" p:port="${redis.port}" p:pool-config-ref="poolConfig"
		p:database="${redis.database}" /> -->
	
	<bean id="connectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
		p:host-name="${redis.host}" p:port="${redis.port}" p:pool-config-ref="poolConfig"
		p:database="${redis.database}" />

	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="connectionFactory" />
	</bean>
	
	
	<bean id="jedis.shardInfo" class="redis.clients.jedis.JedisShardInfo">
		<!-- constructor-arg：通过构造函数注入。 property：通过setter对应的方法注入。 -->
		<!-- <constructor-arg index="0" value="${redis.host}" />
		<constructor-arg index="1" value="${redis.port}" />
		<constructor-arg index="2" value="${redis.timeout}" />-->
		<!-- <constructor-arg index="3" value="shardInfo-osp" />   -->
		<!-- <property name="password" value="${redis.password}" /> -->
		<property name="host" value="${redis.host}"></property>
		<property name="port" value="${redis.port}"></property>
		<property name="connectionTimeout" value="${redis.timeout}"></property>
	</bean>
	
	<!-- <bean id="connectionFactory02"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
		p:host-name="${redis.host}" p:port="${redis.port}" p:pool-config-ref="poolConfig"
		p:database="${redis.database}" />

	<bean id="redisTemplate02" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="connectionFactory02" />
	</bean> -->
	
</beans>